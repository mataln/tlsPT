wandb:
  project: tlspt_lw
  entity: mja2106
  mode: online
experiment_name: null

hydra:
  output_dir: /home/mja78/rds/hpc-work/hydra

max_epochs: 300
strategy: deepspeed_stage_2
profiler: null
#checkpoint_dir: /home/mja78/rds/hpc-work/tlspt-checkpoints
matmul_precision: 'high'
num_points: 8192
seed: 0


datamodule:
  _target_: tlspt.datamodules.single_datamodule.SingleDataModule
  num_workers: 24
  prefetch_factor: 2
  persistent_workers: True
  pin_memory: True
  batch_size: 32

  limit_train_pct: 1.0
  limit_val_pct: 1.0
  limit_test_pct: 1.0

  train_dataset:
    target_class: tlspt.datamodules.components.merged_dataset.MergedOctreeDataset
    kwargs:
      split_files:
        - "${hydra:runtime.cwd}/data/plot_octrees/hjfo-fin/hjfo-fin-splits.csv"
        - "${hydra:runtime.cwd}/data/plot_octrees/hjfo-pol/hjfo-pol-splits.csv"
        - "${hydra:runtime.cwd}/data/plot_octrees/hjfo-spa/hjfo-spa-splits.csv"
      split: train
      scales: ${eval:"[2] * len(${.split_files})"} #One for each dataset
      min_points: ${eval:"[512] * len(${.split_files})"} #One for each dataset
      feature_names: ['scalar_truth'] #Identical across all datasets
      features_to_normalize: null
      normalize: True
      transform:
        _target_: tlspt.transforms.UniformTLSSampler
        num_points: ${num_points}

  val_dataset:
    target_class: tlspt.datamodules.components.merged_dataset.MergedOctreeDataset
    kwargs:
      split_files: ${..train_dataset.kwargs.split_files}
      split: val
      scales: ${..train_dataset.kwargs.scales} #One for each dataset
      min_points: ${..train_dataset.kwargs.min_points} #One for each dataset
      feature_names: ${..train_dataset.kwargs.feature_names}
      features_to_normalize: null
      normalize: True
      transform:
        _target_: tlspt.transforms.UniformTLSSampler
        num_points: ${num_points}

  test_dataset:
    target_class: tlspt.datamodules.components.merged_dataset.MergedOctreeDataset
    kwargs:
      split_files: ${..train_dataset.kwargs.split_files}
      split: test
      scales: ${..train_dataset.kwargs.scales} #One for each dataset
      min_points: ${..train_dataset.kwargs.min_points} #One for each dataset
      feature_names: ${..train_dataset.kwargs.feature_names}
      features_to_normalize: null
      normalize: True
      transform:
        _target_: tlspt.transforms.UniformTLSSampler
        num_points: ${num_points}

#VITS
model:
  _target_: tlspt.models.pointmae.pointmae_seg.PointMAESegmentation
  neighbor_alg: ball_query
  ball_radius: 0.1
  scale: 2.0
  total_epochs: ${max_epochs}
  warmup_epochs: 10
  num_centers: 196
  num_neighbors: 64
  embedding_dim: 384 #Width
  transencoder_config:
    embed_dim: ${model.embedding_dim}
    depth: 12 #Depth
    num_heads: 6 #Heads
    mlp_ratio: 4.0 #MLP

#VITB
# model:
#   _target_: tlspt.models.pointmae.pointmae_seg.PointMAESegmentation
#   neighbor_alg: ball_query
#   ball_radius: 0.1
#   scale: 2.0
#   total_epochs: ${max_epochs}
#   warmup_epochs: 10
#   num_centers: 196
#   num_neighbors: 64
#   embedding_dim: 768 #Width
#   feature_blocks: Sumfin bigger
#   transencoder_config:
#     embed_dim: ${model.embedding_dim}
#     depth: 12 #Depth
#     num_heads: 12 #Heads
#     mlp_ratio: 4.0 #MLP
